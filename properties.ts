import { Property } from './types'

const addDirections = (name: string, abbreviation: string, defaultValue = undefined) => ({
  [name]: [name, defaultValue],
  [abbreviation]: name,
  [`${name}Top`]: [`${name}Top`, defaultValue],
  [`${abbreviation}t`]: `${name}Top`,
  [`${name}Bottom`]: [`${name}Bottom`, defaultValue],
  [`${abbreviation}b`]: `${name}Bottom`,
  [`${name}Left`]: [`${name}Left`, defaultValue],
  [`${abbreviation}l`]: `${name}Left`,
  [`${name}Right`]: [`${name}Right`, defaultValue],
  [`${abbreviation}r`]: `${name}Right`,
})

export const getProperties: () => { [key: string]: Property } = () => ({
  justifyContent: ['justifyContent', 'center'],
  center: 'justifyContent-center',
  jc: 'justifyContent-center',
  between: 'justifyContent-space-between',
  alignItems: ['alignItems', 'center'],
  items: 'alignItems',
  display: ['display', 'flex'],
  flex: 'display',
  df: 'display',
  flexDirection: ['flexDirection', 'row'],
  row: 'flexDirection-row',
  column: 'flexDirection-column',
  direction: 'flexDirection',
  flexWrap: ['flexWrap', 'wrap'], // nowrap is the default.
  wrap: 'flexWrap',
  gap: ['gap', 'medium'],
  space: 'gap',
  columnGap: ['columnGap'],
  rowGap: ['rowGap'],
  borderRadius: ['borderRadius', 'medium'],
  radius: 'borderRadius',
  rounded: 'borderRadius',
  background: ['background'],
  bg: 'background',
  backgroundColor: ['backgroundColor'],
  color: ['color'],
  width: ['width'],
  w: 'width',
  fullWidth: ['width', '100%'],
  maxWidth: ['max-width'],
  maxW: 'maxWidth',
  height: ['height'],
  h: 'height',
  fullHeight: ['height', '100%'],
  maxHeight: ['max-width'],
  maxH: 'maxWidth',
  ...addDirections('padding', 'p'),
  paddingVertical: ['paddingVertical'],
  pv: 'paddingVertical',
  paddingHorizontal: ['paddingHorizontal'],
  ph: 'paddingHorizontal',
  ...addDirections('margin', 'm'),
  marginVertical: ['marginVertical'],
  mv: 'marginVertical',
  marginHorizontal: ['marginHorizontal'],
  mh: 'marginHorizontal',
  textAlign: ['textAlign', 'center'],
  text: 'textAlign',
  font: ['fontFamily', 'sans-serif'],
  fontWeight: ['fontWeight', 'normal'],
  fontSize: ['fontSize', 'medium'],
  bold: 'fontWeight-bold',
  weight: 'fontWeight',
  outline: ['outline', 'none'],
  ...addDirections('border', 'b', 'none'),
  textDecoration: ['textDecoration', 'none'],
  decoration: 'textDecoration',
  shadow: 'boxShadow',
  visibility: ['visibility', 'hidden'],
  hidden: 'visibility',
  visible: 'visibility-visible',
  // Complex properties (dynamically calculated).
  boxShadow: [
    'boxShadow',
    ({ size, color = '#000000AA' }) =>
      `0 ${Math.round(size[0] / 2)}px ${Math.round(size[0] / 2)}px ${Math.round(
        size[0] / 4
      )}px ${color}`,
  ],
  textShadow: [
    'textShadow',
    ({ size, color = 'black' }) => `${size[1]}px ${size[1]}px ${size[1]}px ${color}`,
  ],
  scaleY: ['transform', ({ size = 0.5 }) => `scaleY(${size})`],
})

export const getShortcuts = () => ({
  button: 'outline border',
  link: 'decoration',
})
